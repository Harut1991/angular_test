@mixin font-face($font_name, $font_face_name, $font_style, $font_weight) {
  $file_path: $fonts_folder +'/'+ $font_name;
  @font-face {
    font-family: $font_face_name;
    font-style: $font_style;
    font-weight: $font_weight;
    src: url($file_path + ".eot");
    src: url($file_path + ".eot?#iefix") format('embedded-opentype'),
    url($file_path + ".woff") format('woff'),
    url($file_path + ".ttf") format('truetype'),
    url($file_path + ".svg") format('svg');
  }
}

@mixin bg-img($image: null, $repeat: null, $size: null, $color: null, $position: null) {
  @if ($image) {
    background-image: url($images_folder + $image);
  }
  background-color: $color;
  background-size: $size;
  background-repeat: $repeat;
  background-position: $position;
}

@mixin box-sizing($value) {
  -webkit-box-sizing: $value;
  -moz-box-sizing: $value;
  box-sizing: $value;
}

@mixin box-shadow($str...) {
  -webkit-box-shadow: #{$str};
  -moz-box-shadow: #{$str};
  box-shadow: #{$str};
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin transition($transition...) {
  -webkit-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin animation($animation) {
  -webkit-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}

@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
  -moz-transition: -moz-transform $transition;
  -o-transition: -o-transform $transition;
  transition: transform $transition;
}

//animations
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation-timing-cubic-bezier($timing...) {
  -webkit-animation-timing-function: cubic-bezier($timing);
  animation-timing-function: cubic-bezier($timing);
}

@mixin pos-abs($top: null, $right: null, $bottom: null, $left: null) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin pos-fixed($top: null, $right: null, $bottom: null, $left: null) {
  position: fixed;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin clear-after {
  &::after {
    content: " ";
    clear: both;
    display: block;
  }
}

@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

@mixin optional-at-root($sel) {
    @at-root #{if(not &, $sel, selector-append(&, $sel))} {
        @content;
    }
}

@mixin placeholder {
    @include optional-at-root('::-webkit-input-placeholder') {
        @content;
    }

    @include optional-at-root(':-moz-placeholder') {
        @content;
    }

    @include optional-at-root('::-moz-placeholder') {
        @content;
    }

    @include optional-at-root(':-ms-input-placeholder') {
        @content;
    }
}

//flex
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}

@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}

@mixin dir-col() {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

@mixin dir-col-reverse() {
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

@mixin order($n){
  -webkit-box-ordinal-group: $n + 1;
  -ms-flex-order: $n;
  order: $n;
}

@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}


@mixin column($count, $gap){
  -webkit-column-count: $count;
  -moz-columns: $count;
  column-count: $count;
  -webkit-column-gap: $gap;
  -moz-column-gap: $gap;
  column-gap: $gap;
}

@mixin break-inside($break: avoid){
  -webkit-column-break-inside: $break;
  page-break-inside: $break;
  break-inside: $break;
}


@mixin ellipsis($width) {
  max-width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
